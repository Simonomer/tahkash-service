swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
host: localhost:10010
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:

  # -------Form---------
  /form:
    x-swagger-router-controller: form.controller
    post:
      description: Creates a form
      operationId: createForm
      tags:
        - Form
      parameters:
        - name: subject
          in: body
          schema:
            $ref: "#/definitions/Form"
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/Form'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      description: Modify form
      operationId: modifyForm
      tags:
        - Form
      parameters:
        - in: body
          name: form
          required: true
          schema:
            $ref: '#/definitions/Form'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Form'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /form/duplicate:
    x-swagger-router-controller: form.controller
    post:
      description: Duplicates a form by it's id
      operationId: duplicateForm
      tags:
        - Form
      parameters:
        - in: body
          name: id
          required: true
          schema:
            type: object
            properties:
              _id:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Form'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /forms/_search:
    x-swagger-router-controller: form.controller
    post:
      description: Search forms
      operationId: searchForms
      tags:
        - Form
      parameters:
        - name: query
          in: body
          description: the query
          required: true
          schema:
            type: object
            default: {}
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ExtendedForm"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /forms/{expand}:
    x-swagger-router-controller: form.controller
    get:
      description: Gets all forms
      operationId: getAllForms
      tags:
        - Form
      parameters:
        - name: expand
          in: path
          description: Whether or not to return the buckets
          required: true
          type: boolean
          default: true
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ExtendedForm"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /form/{formId}:
    x-swagger-router-controller: form.controller
    get:
      description: Get form with it's buckets
      operationId: getForm
      tags:
        - Form
      parameters:
        - name: formId
          in: path
          description: The form id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ExtendedForm'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: Deletes a form by id
      operationId: deleteForm
      tags:
        - Form
      parameters:
        - name: formId
          in: path
          description: The form id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Form'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"



  # -------Question---------
  /form/question/{formId}:
    x-swagger-router-controller: question.controller
    post:
      description: Creates question on a form
      tags:
        - Question
      operationId: createQuestionForForm
      parameters:
        - in: path
          name: formId
          type: string
          required: true
        - in: body
          name: question
          schema:
            type: object
            properties:
              text:
                type: string
      responses:
        "200":
          description: Question created
          schema:
            $ref: '#/definitions/Question'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /bucket/question/{bucketId}:
    x-swagger-router-controller: question.controller
    post:
      description: Creates question on a bucket
      tags:
        - Question
      operationId: createQuestionForBucket
      parameters:
        - in: path
          name: bucketId
          type: string
          required: true
        - in: body
          name: question
          schema:
            type: object
            properties:
              text:
                type: string
      responses:
        "200":
          description: Question created
          schema:
            $ref: '#/definitions/Question'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /bucket/questions/{bucketId}:
    x-swagger-router-controller: question.controller
    get:
      description: Get all questions per form
      tags:
        - Question
      operationId: getQuestionsForBucket
      parameters:
        - in: path
          name: bucketId
          type: string
          required: true
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Question'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'


  /form/questions/{formId}:
    x-swagger-router-controller: question.controller
    get:
      description: Get all questions per form
      tags:
        - Question
      operationId: getQuestionsForForm
      parameters:
        - in: path
          name: formId
          type: string
          required: true
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Question'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /question/{questionId}:
    x-swagger-router-controller: question.controller
    delete:
      description: Deletes a question
      operationId: deleteQuestion
      tags:
        - Question
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
      responses:
        200:
          description: OK

  /question:
    x-swagger-router-controller: question.controller
    put:
      description: Modify questions
      operationId: modifyQuestions
      tags:
        - Question
      parameters:
        - in: body
          name: questions
          schema:
            type: array
            items:
              $ref: '#/definitions/Question'
      responses:
        "200":
          description: Question created
          schema:
            type: array
            items:
              $ref: '#/definitions/Question'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  # -------Bucket---------
  /bucket:
    x-swagger-router-controller: bucket.controller
    post:
      description: Creates a bucket
      operationId: createBucket
      tags:
        - Bucket
      parameters:
        - in: body
          name: bucket
          schema:
            $ref: '#/definitions/Bucket'
      responses:
        "201":
          description: Bucket created
          schema:
            $ref: '#/definitions/Bucket'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /buckets:
    x-swagger-router-controller: bucket.controller
    get:
      description: Gets all buckets
      operationId: getBuckets
      tags:
        - Bucket
      responses:
        "200":
          description: Bucket created
          schema:
            type: array
            items:
              $ref: '#/definitions/Bucket'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /buckets/_search:
    x-swagger-router-controller: bucket.controller
    post:
      description: Search forms
      operationId: searchBuckets
      tags:
        - Bucket
      parameters:
        - name: query
          in: body
          description: the query
          required: true
          schema:
            type: object
            default: {}
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Bucket'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /bucket/{bucketId}:
    x-swagger-router-controller: bucket.controller
    put:
      description: Modifies a bucket
      operationId: modifyBucket
      tags:
        - Bucket
      parameters:
        - in: path
          name: bucketId
          type: string
          required: true
        - in: body
          name: bucket
          schema:
            $ref: '#/definitions/Bucket'
      responses:
        "200":
          description: Bucket created
          schema:
            $ref: '#/definitions/Bucket'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      description: Deletes an existing bucket
      operationId: deleteBucket
      tags:
        - Bucket
      parameters:
        - in: path
          name: bucketId
          type: string
          required: true
      responses:
        "200":
          description: Bucket created
          schema:
            $ref: '#/definitions/Bucket'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  # -------Answer---------
  /answers:
    x-swagger-router-controller: answer.controller
    post:
      description: Post answers
      operationId: postAnswers
      tags:
        - Answer
      parameters:
        - in: body
          name: answers
          schema:
            type: array
            items:
              $ref: '#/definitions/Answer'
      responses:
        "201":
          description: answer created
          schema:
            type: array
            items:
              $ref: '#/definitions/Answer'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /answers/form/{formId}:
    x-swagger-router-controller: answer.controller
    get:
      description: Gets all the answers mapped with it's questions all by form id
      operationId: getAnswersForForm
      tags:
        - Answer
      parameters:
        - in: path
          name: formId
          type: string
          required: true
      responses:
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /answers/bucket/{bucketId}:
    x-swagger-router-controller: answer.controller
    get:
      description: Gets all the answers mapped with it's questions all by bucket id
      operationId: getAnswersForBucket
      tags:
        - Answer
      parameters:
        - in: path
          name: bucketId
          type: string
          required: true
      responses:
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'


  /swagger:
    x-swagger-pipe: swagger_raw

# -------Models---------
definitions:
  Form:
    type: object
    description: This is represents a form
    properties:
      name:
        type: string
      course:
        type: string
        default: '1'
      week:
        type: string
        default: '1'
      bucketIds:
        type: array
        items:
          type: string

  ExtendedForm:
    type: object
    description: Represents a form with extended buckets instead of ids
    properties:
      name:
        type: string
      course:
        type: string
      week:
        type: string
      buckets:
        type: array
        items:
          $ref: "#/definitions/Bucket"

  Question:
    type: object
    description: This is represents a question
    properties:
      bucketId:
        type: string
      text:
        type: string
      priority:
        type: number

  Bucket:
    type: object
    description: This is represents a bucket
    properties:
      name:
        type: string
      course:
        type: string
      week:
        type: string

  Answer:
    type: object
    description: This is represents a amswer
    properties:
      text:
        type: string
      rating:
        type: number
      questionId:
        type: string
      formId:
        type: string

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string